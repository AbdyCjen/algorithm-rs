/**
 * [389] Find the Difference
 *
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *  
 * <strong class="example">Example 1:
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 * <strong class="example">Example 2:
 *
 * Input: s = "", t = "y"
 * Output: "y"
 *
 *  
 * Constraints:
 *
 *     0 <= s.length <= 1000
 *     t.length == s.length + 1
 *     s and t consist of lowercase English letters.
 *
 */
pub struct Solution {}

// submission codes start here

impl Solution {
	pub fn find_the_difference(s: String, t: String) -> char {
		let (mut c1, mut c2) = ([0; 26], [0; 26]);
		s.bytes().for_each(|c| c1[(c - b'a') as usize] += 1);
		t.bytes().for_each(|c| c2[(c - b'a') as usize] += 1);
		for ((i, c1), c2) in (0..).zip(c1).zip(c2) {
			if c2 > c1 {
				return (b'a' + i as u8) as char;
			}
		}
		'a'
	}
}

// submission codes end
